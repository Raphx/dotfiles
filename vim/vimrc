" Obtained originally from
" https://github.com/mhinz/vim-galore/blob/master/contents/minimal-vimrc.vim
"
" A (not so) minimal vimrc.
"

" You want Vim, not vi. When Vim finds a vimrc, 'nocompatible' is set anyway.
" We set it explicitely to make our position clear!
set nocompatible

" Pathogen - tpope/vim-pathogen
execute pathogen#infect()

set encoding     =utf-8    " The encoding displayed.
set fileencoding =utf-8    " The encoding written to file.

filetype plugin indent on  " Load plugins according to detected filetype.
syntax on                  " Enable syntax highlighting.

set autoindent             " Indent according to previous line.
set expandtab              " Use spaces instead of tabs.
set tabstop     =8         " Display tab as 8 spaces.
set softtabstop =2         " Tab key indents by 2 spaces.
set shiftwidth  =2         " >> indents by 2 spaces.
set shiftround             " >> indents to next multiple of 'shiftwidth'.

set backspace   =indent,eol,start  " Make backspace work as you would expect.
set hidden                 " Switch between buffers without having to save first.
set laststatus  =2         " Always show statusline.
set display     =lastline  " Show as much as possible of the last line.

set showmode               " Show current mode in command-line.
set showcmd                " Show already typed keys when more are expected.
set ruler                  " Show ruler.
set number                 " Show line number.
set relativenumber         " Use relative line mumber.

set autoread               " Automatically load file on change.
set pastetoggle=<F2>       " Key for toggling paste mode

set ignorecase             " Case-insensitive search
set smartcase              " Intelligently switch between case sensitivity in search
set incsearch              " Highlight while searching with / or ?.
set hlsearch               " Keep matches highlighted.

set ttyfast                " Faster redrawing.
set lazyredraw             " Only redraw when necessary.

set splitbelow             " Open new windows below the current window.
set splitright             " Open new windows right of the current window.

set cursorline             " Find the current line quickly.
set wrapscan               " Searches wrap around end-of-file.
set report      =0         " Always report changed lines.
set synmaxcol   =200       " Only highlight the first 200 columns.

set spelllang   =en        " Set spell check language to English

set list                   " Show non-printable characters.
if has('multi_byte') && &encoding ==# 'utf-8'
  let &listchars = 'tab:▸ ,extends:❯,precedes:❮,nbsp:±'
else
  let &listchars = 'tab:> ,extends:>,precedes:<,nbsp:.'
endif

" The fish shell is not very compatible to other shells and unexpectedly
" breaks things that use 'shell'.
if &shell =~# 'fish$'
  set shell=/bin/bash
endif

" Put all temporary files under the same directory.
" https://github.com/mhinz/vim-galore#handling-backup-swap-undo-and-viminfo-files
if exists('*mkdir') && !isdirectory($HOME.'/.vim/files')
  call mkdir($HOME.'/.vim/files/backup', 'p')
  call mkdir($HOME.'/.vim/files/swap', 'p')
  call mkdir($HOME.'/.vim/files/undo', 'p')
  call mkdir($HOME.'/.vim/files/info', 'p')
endif

set backup
set backupdir   =$HOME/.vim/files/backup/
set backupext   =-vimbackup
set backupskip  =
set directory   =$HOME/.vim/files/swap//
set updatecount =100
set undofile
set undodir     =$HOME/.vim/files/undo/
set viminfo     ='100,n$HOME/.vim/files/info/viminfo

" autocmd
au BufRead,BufNewFile *.py set softtabstop=4 shiftwidth=4
au BufRead,BufNewFile *.rs set softtabstop=4 shiftwidth=4

" Leader
let mapleader = ","

" Key mapping
nnoremap <Leader>n :nohl<CR>
nnoremap <Leader>q :FZF<CR>
nnoremap <Leader>a :Ack!<Space>
nnoremap <Leader>2 @:<CR>

function! ToggleSpellCheck()
  set spell!
  if &spell
    echo "Spellcheck ON"
  else
    echo "Spellcheck OFF"
  endif
endfunction
nnoremap <silent> <Leader>s :call ToggleSpellCheck()<CR>

nnoremap <C-j> <C-W>j
nnoremap <C-k> <C-W>k
nnoremap <C-h> <C-W>h
nnoremap <C-l> <C-W>l

" netrw
let g:netrw_bufsettings = 'noma nomod nu nobl nowrap ro' " Show line number in netrw
let g:netrw_banner = 0    " Hide netrw banner

" Plugin - Raphx/nofrils
let g:nofrils_heavylinenumbers = 1
colorscheme nofrils-light

" Plugin - w0rp/ale
let g:ale_linters = { 'vue': ['eslint', 'stylelint'] }
let g:ale_linter_aliases = { 'vue': ['vue', 'javascript', 'css'] }
let g:ale_set_highlights = 0

" Plugin - takac/vim-hardtime
let g:hardtime_default_on = 1
let g:list_of_disabled_keys = ["<UP>", "<DOWN>", "<LEFT>", "<RIGHT>"]

" Plugin - posva/vim-vue
autocmd FileType vue syntax sync fromstart
let g:vue_disable_pre_processors = 1

" Plugin - junegunn/fzf
set rtp+=/usr/local/opt/fzf

" Plugin - mileszs/ack.vim
if executable('ag')
  let g:ackprg = 'ag -i --vimgrep'
endif
cnoreabbrev Ack Ack!
